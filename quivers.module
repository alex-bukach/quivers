<?php

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Entity\Entity\EntityFormDisplay;

/**
 * Implements hook_entity_base_field_info().
 */
function quivers_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() === 'commerce_product') {
    $fields['quivers_self_fulfilled'] = BaseFieldDefinition::create('boolean')
      ->setLabel(t('Self-fulfilled'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'boolean_checkbox',
        'settings' => [
          'display_label' => TRUE,
        ],
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayOptions('view', [
        'label' => 'inline',
        'type' => 'boolean',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('view', TRUE);


      $fields['taxcode'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('Taxcode'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'hidden',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);
  }

  if ($entity_type->id() === 'commerce_product_variation') {
    $fields['quivers_pre_order'] = BaseFieldDefinition::create('boolean')
      ->setLabel(t('Pre-order'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'boolean_checkbox',
        'settings' => [
          'display_label' => TRUE,
        ],
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayOptions('view', [
        'label' => 'inline',
        'type' => 'boolean',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('view', TRUE);

    $fields['quivers_back_order'] = BaseFieldDefinition::create('boolean')
      ->setLabel(t('Back-order'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'boolean_checkbox',
        'settings' => [
          'display_label' => TRUE,
        ],
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayOptions('view', [
        'label' => 'inline',
        'type' => 'boolean',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('view', TRUE);

     $fields['upc_hidden_value'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('UPC HIDDEN'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'hidden',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', FALSE)
      ->setDisplayConfigurable('view', FALSE);

     $fields['upc'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('UPC'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'hidden',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);
    }

  if ($entity_type->id() === 'commerce_order_item') {
    $fields['quivers_amount_refunded'] = BaseFieldDefinition::create('float')
      ->setLabel(t('Amount refunded'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'hidden',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);

    $fields['quivers_sales_tax_refunded'] = BaseFieldDefinition::create('float')
      ->setLabel(t('Tax amount refunded'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'hidden',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);

    $fields['quivers_sales_tax'] = BaseFieldDefinition::create('float')
      ->setLabel(t('Sales tax'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setDisplayOptions('form', [
        'type' => 'hidden',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);

    $fields['quivers_state'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('State'))
      ->setRevisionable(TRUE)
      ->setTranslatable(FALSE)
      ->setSetting('allowed_values', [
        'cancelled' => t('Cancelled'),
        'refunded' => t('Refunded'),
        'shipped' => t('Shipped'),
        'processed' => t('Processed'),
        'processing' => t('Processing'),
      ])
      ->setDisplayOptions('form', [
        'type' => 'hidden',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);

    $fields['quivers_tracking_number'] = BaseFieldDefinition::create('tracking_number')
      ->setLabel(t('Tracking number'))
      ->setRevisionable(TRUE)
      ->setTranslatable(TRUE)
      ->setDisplayOptions('form', [
        'type' => 'hidden',
        'weight' => 0,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);
  }

  return $fields;
}


function Quivers_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
 {
    $product = \Drupal::routeMatch()->getParameter('commerce_product');
    $product_id = $product != null ?$product->id() : null;

    if(array_key_exists('class',$form['#attributes']) && array_key_exists('1',$form['#attributes']['class']) && $form['#attributes']['class'][1] =='commerce-product-form'){
    $formname = str_replace('-', '_', $form['#attributes']['class'][0]);
        if($form_id == $formname) {
            $taxcode =null;
            $db = \Drupal::database();
            $type ='default';
            $query = $db->select('commerce_product_field_data', 'taxcode');
            $query->fields('taxcode');
            $query->condition('product_id', $product_id, "=");
            $result = $query->execute();

            foreach($result as $row){
              $taxcode = $row->taxcode;
              $type = $row->type;
            }

            $form['taxcode'] = array(
              '#type' => 'textfield',
              '#name'=> 'taxcode',
              '#required' => FALSE,
              '#title' => t('Taxcode'),
              '#weight' => 15,
              '#default_value' =>  $taxcode
            );


        }
    }

    $product_variation = \Drupal::routeMatch()->getParameter('commerce_product_variation');
    $product_variant_id = $product_variation != null ?$product_variation->id() : null;
    $upc_hidden_value = \Drupal::config('quivers.settings')->get('upc_field');
    if(array_key_exists('class',$form['#attributes']) && array_key_exists('1',$form['#attributes']['class']) && $form['#attributes']['class'][1] =='commerce-product-variation-form'){
        if(strpos($form_id, "commerce_product_variation") == 0) {
            $upc = null;
            $db = \Drupal::database();
            $type ='default';
            $query = $db->select('commerce_product_variation_field_data', 'upc');
            $query->fields('upc');
            $query->condition('variation_id', $product_variant_id, "=");
            $result = $query->execute();

            foreach($result as $row){
              $upc = $row->upc;
              $type = $row->type;
            }

            $form['upc'] = array(
              '#type' => 'textfield',
              '#name'=> 'upc',
              '#required' => FALSE,
              '#title' => t('UPC'),
              '#weight' => 15,
              '#default_value' =>  $upc,
            );

            $form['upc_hidden_value'] = array(
              '#type' => 'hidden',
              '#name'=> 'upc_hidden_value',
              '#required' => FALSE,
              '#title' => t('UPC HIDDEN VALUE'),
              '#weight' => 15,
              '#default_value' =>  $upc_hidden_value,
            );

        }
    }

   if ($form_id == "quivers_config_settings" || $form_id == "quivers_tax_config_settings" ){
       $form['#attached']['library'][] = 'quivers/select2.quivers';
     }
    return $form;
}

