<?php

/**
 * @file
 * Contains runtime functions for Quivers.
 */

use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_requirements().
 */
function quivers_requirements($phase) {
  $requirements = [];
  if ($phase == 'runtime') {
    // Let's check if PHP OAuth 2.0 Server is installed.
    if (!class_exists('League\OAuth2\Server\AuthorizationServer')) {
      $requirements['league/oauth2-server'] = [
        'description' => t('Quivers requires league/oauth2-server as dependency.'),
        'severity' => REQUIREMENT_WARNING,
      ];
    }

  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function quivers_uninstall() {

  // TODO: Can we wrap it in try/catch?
  // Remove fields created on plugin installation.
  FieldStorageConfig::loadByName('commerce_order_item', 'field_amount_refunded')->delete();
  FieldStorageConfig::loadByName('commerce_order_item', 'field_state')->delete();
  FieldStorageConfig::loadByName('commerce_order_item', 'field_tracking_number')->delete();
  FieldStorageConfig::loadByName('commerce_product', 'field_self_fulfilled')->delete();
  FieldStorageConfig::loadByName('commerce_product', 'field_pre_order')->delete();
  FieldStorageConfig::loadByName('commerce_product', 'field_back_order')->delete();
  // Remove view created on plugin installation.
  \Drupal::entityTypeManager()->getStorage('view')->load('current_user')->delete();
  \Drupal::entityTypeManager()->getStorage('view')->load('orders_list')->delete();
  \Drupal::entityTypeManager()->getStorage('view')->load('payments_list')->delete();
  // Remove REST Resources created on plugin installation.
  \Drupal::configFactory()->getEditable('rest.resource.entity.commerce_order')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.commerce_order_item')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.commerce_payment_gateway')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.commerce_product')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.commerce_product_attribute_value')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.commerce_product_variation')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.commerce_shipment')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.commerce_shipping_method')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.profile')->delete();
  \Drupal::configFactory()->getEditable('rest.resource.entity.taxonomy_term')->delete();

}
